version: '3.8'

services:

  security-service:
    build: ../../mp-security
    image: mp-security
    container_name: mp-security
    restart: unless-stopped
    environment:
#      - SPRING_PROFILES_ACTIVE=production,test-confirmation-code-reading,test-mail-sender-bypassing
      - SPRING_PROFILES_ACTIVE=production
      - SERVER_PORT=8078
      - APP_PROFILE_SERVER_URL=http://profile-service:8076/api/v1
      - APP_DB_HOST=security-postgres-db
      - APP_DB_PORT=5432
      - REDIS_HOST=security-redis-db
      - REDIS_PORT=6379

      - APP_DB_NAME=${POSTGRES_DB}
      - APP_DB_USERNAME=${POSTGRES_USER}
      - APP_DB_PASSWORD=${POSTGRES_PASSWORD}

      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}

      - APP_MAIL_SENDER=${APP_MAIL_SENDER}
      - APP_MAIL_HOST=${APP_MAIL_HOST}
      - APP_MAIL_PORT=${APP_MAIL_PORT}
      - APP_MAIL_USERNAME=${APP_MAIL_USERNAME}
      - APP_MAIL_PASSWORD=${APP_MAIL_PASSWORD}

      - APP_JWT_ACCESS_KEY=${APP_JWT_ACCESS_KEY}
      - APP_JWT_ACCESS_LIFE_SECONDS=${APP_JWT_ACCESS_LIFE_SECONDS}
      - APP_JWT_ACCESS_STORING=${APP_JWT_ACCESS_STORING}
      - APP_JWT_REFRESH_KEY=${APP_JWT_REFRESH_KEY}
      - APP_JWT_REFRESH_LIFE_SECONDS=${APP_JWT_REFRESH_LIFE_SECONDS}

  security-redis-db:
    image: redis:latest
    container_name: mp-security-redis-db
    environment:
      - REDIS_PORT=6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ] # TODO: What if set credentials is there?
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  security-postgres-db:
    image: postgres:14-alpine
    container_name: mp-security-postgres-db
    environment:
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
