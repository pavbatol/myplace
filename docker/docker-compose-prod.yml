version: '3.8'

services:

  env-merger:
    profiles: [ "env-merger" ]
    image: alpine
    volumes:
      - .:/app
    working_dir: /app
    entrypoint: >
      /bin/sh -c "
      echo 'Starting to combine .env files...';
      [ ! -f security/.env ] && { echo 'Error: security/.env not found'; exit 1; } || echo ' - security/.env ✓';
      [ ! -f profile/.env ] && { echo 'Error: profile/.env not found'; exit 1; } || echo ' - profile/.env ✓';
      [ ! -f test/.env ] && { echo 'Error: test/.env not found'; exit 1; } || echo ' - test/.env ✓';
      cat security/.env profile/.env test/.env > .env;
      echo 'Done';
      "
    restart: "no"

  stats-service:
    profiles: [ "stats" ]
    extends:
      file: stats/docker-compose-stats-prod.yml
      service: stats-service
    depends_on:
      stats-db:
        condition: service_healthy
      env-merger:
        condition: service_completed_successfully

  stats-db:
    profiles: [ "stats" ]
    extends:
      file: stats/docker-compose-stats-prod.yml
      service: stats-db
    depends_on:
      env-merger:
        condition: service_completed_successfully

  security-service:
    profiles: [ "security" ]
    extends:
      file: security/docker-compose-security-prod.yml
      service: security-service
    depends_on:
      security-redis-db:
        condition: service_healthy
      security-postgres-db:
        condition: service_healthy
      env-merger:
        condition: service_completed_successfully

  security-redis-db:
    profiles: [ "security" ]
    extends:
      file: security/docker-compose-security-prod.yml
      service: security-redis-db
    depends_on:
      env-merger:
        condition: service_completed_successfully

  security-postgres-db:
    profiles: [ "security" ]
    extends:
      file: security/docker-compose-security-prod.yml
      service: security-postgres-db
    depends_on:
      env-merger:
        condition: service_completed_successfully

  profile-service:
    profiles: [ "profile" ]
    extends:
      file: profile/docker-compose-profile-prod.yml
      service: profile-service
    depends_on:
      profile-db:
        condition: service_healthy
      env-merger:
        condition: service_completed_successfully

  profile-db:
    profiles: [ "profile" ]
    extends:
      file: profile/docker-compose-profile-prod.yml
      service: profile-db
    depends_on:
      env-merger:
        condition: service_completed_successfully
